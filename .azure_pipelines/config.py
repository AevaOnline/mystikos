"""configurations for the test framework used by pipeline and local runs
"""

import logging
from enum import Enum, auto

################################################################
### Dependency Configurations
################################################################
"""
put all dependency packages and version(optional) in the dict. If specific version has not been 
listed, default/latest version in APT cache will be installed.
the exact package name is mandatory, the package version is optional. If a 
version is provided, the test framework will try to install the EXACT version, or it will install 
the latest version in the APT cache. e.g. 
 - "python3-apt": "1.6.5ubuntu0.3", will install exact version 1.6.5ubuntu0.3, 
 if the version cannot be found, an error message will be raised.
 - "python3-setuptools": None, will install whatever the latest version in current APT cache is.
"""
DEPENDENCIES: dict = {
    "python3-setuptools": None,
    "build-essential": None,
    "docker-ce": None,
}

################################################################
# Log Configurations
################################################################
"""
Log levels from high to low: CRITICAL > ERROR > INFO > DEBUG.
 - CRITICAL includes only summary information.
 - ERROR includes logs from ERROR to CRITICAL.
 - INFO includes logs from INFO to CRITICAL.
 - DEBUG includes all logs
"""
LOG_LEVEL = logging.DEBUG

# determine the length of the saprators in log, e.g. *********** or ============
LOG_SEPARATOR_LEN = 80
# where to put the log file. By default it will be under project root directory
LOG_FILE_PATH = None
LOG_PRINT_STDERR_TO_TERMINAL = True
LOG_PRINT_STDOUT_TO_TERMINAL = False

# Explicitly config project root, set to None for auto inference (default),
# that is the parent directory of the pipeline directory
PRJ_ROOT = None


class TestMode(Enum):
    INCLUDE = auto()
    EXCLUDE = auto()


################################################################
### Unit Test Configurations
################################################################
# Explicitly config test src root, set to None for auto inference (default).
UNIT_TEST_SRC_ROOT = None
# Flag to turn unit test on/off
UNIT_TEST_ON = True

# EXCLUDE mode will run all unit tests under test root directory
UNIT_TEST_MODE = TestMode.EXCLUDE
# UNIT_TEST_MODE = TestMode.INCLUDE
"""
Both INCLUDE and EXCLUDE test matching will do a fuzzy test discovery with following sequence
 - if absolute path provided and is valid, will use absolute path
 - if path with tests root folder provided and is valid, will use the path
 - if path with only test directory is provided, will guess and verify if the TEST_SRC_ROOT/test_path is valide
 - if no valid provided path, will try to use test_name to infere test path as TEST_SRC_ROOT/test_name
 - so all following name:path formats are valid and can be parsed
     - "conf": "tests/conf",
     - "conf": "conf",
     - "conf": None,
"""
UNIT_TEST_INCLUDE: dict = {
    "conf": "tests/conf",
}
UNIT_TEST_EXCLUDE: dict = {
    "libc": "tests/libc",
}

"""
libc configurations for the test framework used by pipeline and local runs
"""
# Explicitly config libc test src root, set to None for auto inference (default).
LIBC_TEST_ROOT = None

LIBC_TEST_INCLUDE: dict = {
    "functional -> argv": "/src/functional/argv.exe",
    "functional -> basename": "/src/functional/basename.exe",
    "functional -> clocale_mbfuncs": "/src/functional/clocale_mbfuncs.exe",
    "functional -> clock_gettime": "/src/functional/clock_gettime.exe",
    "functional -> crypt": "/src/functional/crypt.exe",
    "functional -> dirname": "/src/functional/dirname.exe",
    "functional -> dlopen": "/src/functional/dlopen.exe",
    "functional -> fdopen": "/src/functional/fdopen.exe",
    "functional -> fnmatch": "/src/functional/fnmatch.exe",
    "functional -> iconv_open": "/src/functional/iconv_open.exe",
    "functional -> inet_pton": "/src/functional/inet_pton.exe",
    "functional -> mbc": "/src/functional/mbc.exe",
    "functional -> memstream": "/src/functional/memstream.exe",
    "functional -> qsort": "/src/functional/qsort.exe",
    "functional -> random": "/src/functional/random.exe",
    "functional -> search_hsearch": "/src/functional/search_hsearch.exe",
    "functional -> search_insque": "/src/functional/search_insque.exe",
    "functional -> search_lsearch": "/src/functional/search_lsearch.exe",
    "functional -> search_tsearch": "/src/functional/search_tsearch.exe",
    "functional -> snprintf": "/src/functional/snprintf.exe",
    "functional -> socket": "/src/functional/socket.exe",
    "functional -> sscanf": "/src/functional/sscanf.exe",
    "functional -> strftime": "/src/functional/strftime.exe",
    "functional -> string": "/src/functional/string.exe",
    "functional -> string_memcpy": "/src/functional/string_memcpy.exe",
    "functional -> string_memmem": "/src/functional/string_memmem.exe",
    "functional -> string_memset": "/src/functional/string_memset.exe",
    "functional -> string_strchr": "/src/functional/string_strchr.exe",
    "functional -> string_strcspn": "/src/functional/string_strcspn.exe",
    "functional -> string_strstr": "/src/functional/string_strstr.exe",
    "functional -> strtod": "/src/functional/strtod.exe",
    "functional -> strtod_long": "/src/functional/strtod_long.exe",
    "functional -> strtod_simple": "/src/functional/strtod_simple.exe",
    "functional -> strtof": "/src/functional/strtof.exe",
    "functional -> strtol": "/src/functional/strtol.exe",
    "functional -> strtold": "/src/functional/strtold.exe",
    "functional -> swprintf": "/src/functional/swprintf.exe",
    "functional -> tgmath": "/src/functional/tgmath.exe",
    "functional -> time": "/src/functional/time.exe",
    "functional -> tls_align": "/src/functional/tls_align.exe",
    "functional -> tls_align_dlopen": "/src/functional/tls_align_dlopen.exe",
    "functional -> tls_init_dlopen": "/src/functional/tls_init_dlopen.exe",
    "functional -> udiv": "/src/functional/udiv.exe",
    "functional -> wcsstr": "/src/functional/wcsstr.exe",
    "functional -> wcstol": "/src/functional/wcstol.exe",
    "math -> acos": "/src/math/acos.exe",
    "math -> acosf": "/src/math/acosf.exe",
    "math -> acosh": "/src/math/acosh.exe",
    "math -> acoshf": "/src/math/acoshf.exe",
    "math -> acoshl": "/src/math/acoshl.exe",
    "math -> acosl": "/src/math/acosl.exe",
    "math -> asin": "/src/math/asin.exe",
    "math -> asinf": "/src/math/asinf.exe",
    "math -> asinh": "/src/math/asinh.exe",
    "math -> asinhf": "/src/math/asinhf.exe",
    "math -> asinhl": "/src/math/asinhl.exe",
    "math -> asinl": "/src/math/asinl.exe",
    "math -> atan": "/src/math/atan.exe",
    "math -> atan2": "/src/math/atan2.exe",
    "math -> atan2f": "/src/math/atan2f.exe",
    "math -> atan2l": "/src/math/atan2l.exe",
    "math -> atanf": "/src/math/atanf.exe",
    "math -> atanh": "/src/math/atanh.exe",
    "math -> atanhf": "/src/math/atanhf.exe",
    "math -> atanhl": "/src/math/atanhl.exe",
    "math -> atanl": "/src/math/atanl.exe",
    "math -> cbrt": "/src/math/cbrt.exe",
    "math -> cbrtf": "/src/math/cbrtf.exe",
    "math -> cbrtl": "/src/math/cbrtl.exe",
    "math -> ceil": "/src/math/ceil.exe",
    "math -> ceilf": "/src/math/ceilf.exe",
    "math -> ceill": "/src/math/ceill.exe",
    "math -> copysign": "/src/math/copysign.exe",
    "math -> copysignf": "/src/math/copysignf.exe",
    "math -> copysignl": "/src/math/copysignl.exe",
    "math -> cos": "/src/math/cos.exe",
    "math -> cosf": "/src/math/cosf.exe",
    "math -> cosh": "/src/math/cosh.exe",
    "math -> coshf": "/src/math/coshf.exe",
    "math -> coshl": "/src/math/coshl.exe",
    "math -> cosl": "/src/math/cosl.exe",
    "math -> drem": "/src/math/drem.exe",
    "math -> dremf": "/src/math/dremf.exe",
    "math -> erf": "/src/math/erf.exe",
    "math -> erfc": "/src/math/erfc.exe",
    "math -> erfcf": "/src/math/erfcf.exe",
    "math -> erfcl": "/src/math/erfcl.exe",
    "math -> erff": "/src/math/erff.exe",
    "math -> erfl": "/src/math/erfl.exe",
    "math -> exp": "/src/math/exp.exe",
    "math -> exp10": "/src/math/exp10.exe",
    "math -> exp10f": "/src/math/exp10f.exe",
    "math -> exp10l": "/src/math/exp10l.exe",
    "math -> exp2": "/src/math/exp2.exe",
    "math -> exp2f": "/src/math/exp2f.exe",
    "math -> exp2l": "/src/math/exp2l.exe",
    "math -> expf": "/src/math/expf.exe",
    "math -> expl": "/src/math/expl.exe",
    "math -> expm1": "/src/math/expm1.exe",
    "math -> expm1f": "/src/math/expm1f.exe",
    "math -> expm1l": "/src/math/expm1l.exe",
    "math -> fabs": "/src/math/fabs.exe",
    "math -> fabsf": "/src/math/fabsf.exe",
    "math -> fabsl": "/src/math/fabsl.exe",
    "math -> fdim": "/src/math/fdim.exe",
    "math -> fdimf": "/src/math/fdimf.exe",
    "math -> fdiml": "/src/math/fdiml.exe",
    "math -> fenv": "/src/math/fenv.exe",
    "math -> floor": "/src/math/floor.exe",
    "math -> floorf": "/src/math/floorf.exe",
    "math -> floorl": "/src/math/floorl.exe",
    "math -> fma": "/src/math/fma.exe",
    "math -> fmaf": "/src/math/fmaf.exe",
    "math -> fmax": "/src/math/fmax.exe",
    "math -> fmaxf": "/src/math/fmaxf.exe",
    "math -> fmaxl": "/src/math/fmaxl.exe",
    "math -> fmin": "/src/math/fmin.exe",
    "math -> fminf": "/src/math/fminf.exe",
    "math -> fminl": "/src/math/fminl.exe",
    "math -> fmod": "/src/math/fmod.exe",
    "math -> fmodf": "/src/math/fmodf.exe",
    "math -> fmodl": "/src/math/fmodl.exe",
    "math -> fpclassify": "/src/math/fpclassify.exe",
    "math -> frexp": "/src/math/frexp.exe",
    "math -> frexpf": "/src/math/frexpf.exe",
    "math -> frexpl": "/src/math/frexpl.exe",
    "math -> hypot": "/src/math/hypot.exe",
    "math -> hypotf": "/src/math/hypotf.exe",
    "math -> hypotl": "/src/math/hypotl.exe",
    "math -> ilogb": "/src/math/ilogb.exe",
    "math -> ilogbf": "/src/math/ilogbf.exe",
    "math -> ilogbl": "/src/math/ilogbl.exe",
    "math -> isless": "/src/math/isless.exe",
    "math -> j0": "/src/math/j0.exe",
    "math -> j0f": "/src/math/j0f.exe",
    "math -> j1": "/src/math/j1.exe",
    "math -> j1f": "/src/math/j1f.exe",
    "math -> jn": "/src/math/jn.exe",
    "math -> jnf": "/src/math/jnf.exe",
    "math -> ldexp": "/src/math/ldexp.exe",
    "math -> ldexpf": "/src/math/ldexpf.exe",
    "math -> ldexpl": "/src/math/ldexpl.exe",
    "math -> lgamma_r": "/src/math/lgamma_r.exe",
    "math -> lgammaf_r": "/src/math/lgammaf_r.exe",
    "math -> lgammal_r": "/src/math/lgammal_r.exe",
    "math -> llrint": "/src/math/llrint.exe",
    "math -> llrintf": "/src/math/llrintf.exe",
    "math -> llrintl": "/src/math/llrintl.exe",
    "math -> llround": "/src/math/llround.exe",
    "math -> llroundf": "/src/math/llroundf.exe",
    "math -> llroundl": "/src/math/llroundl.exe",
    "math -> log": "/src/math/log.exe",
    "math -> log10": "/src/math/log10.exe",
    "math -> log10f": "/src/math/log10f.exe",
    "math -> log10l": "/src/math/log10l.exe",
    "math -> log1p": "/src/math/log1p.exe",
    "math -> log1pf": "/src/math/log1pf.exe",
    "math -> log1pl": "/src/math/log1pl.exe",
    "math -> log2": "/src/math/log2.exe",
    "math -> log2l": "/src/math/log2l.exe",
    "math -> logb": "/src/math/logb.exe",
    "math -> logbf": "/src/math/logbf.exe",
    "math -> logbl": "/src/math/logbl.exe",
    "math -> logf": "/src/math/logf.exe",
    "math -> logl": "/src/math/logl.exe",
    "math -> lrint": "/src/math/lrint.exe",
    "math -> lrintf": "/src/math/lrintf.exe",
    "math -> lrintl": "/src/math/lrintl.exe",
    "math -> lround": "/src/math/lround.exe",
    "math -> lroundf": "/src/math/lroundf.exe",
    "math -> lroundl": "/src/math/lroundl.exe",
    "math -> modf": "/src/math/modf.exe",
    "math -> modff": "/src/math/modff.exe",
    "math -> modfl": "/src/math/modfl.exe",
    "math -> nearbyint": "/src/math/nearbyint.exe",
    "math -> nearbyintf": "/src/math/nearbyintf.exe",
    "math -> nearbyintl": "/src/math/nearbyintl.exe",
    "math -> nextafter": "/src/math/nextafter.exe",
    "math -> nextafterf": "/src/math/nextafterf.exe",
    "math -> nextafterl": "/src/math/nextafterl.exe",
    "math -> nexttoward": "/src/math/nexttoward.exe",
    "math -> nexttowardf": "/src/math/nexttowardf.exe",
    "math -> nexttowardl": "/src/math/nexttowardl.exe",
    "math -> pow": "/src/math/pow.exe",
    "math -> pow10": "/src/math/pow10.exe",
    "math -> pow10f": "/src/math/pow10f.exe",
    "math -> pow10l": "/src/math/pow10l.exe",
    "math -> powl": "/src/math/powl.exe",
    "math -> remainder": "/src/math/remainder.exe",
    "math -> remainderf": "/src/math/remainderf.exe",
    "math -> remainderl": "/src/math/remainderl.exe",
    "math -> remquo": "/src/math/remquo.exe",
    "math -> remquof": "/src/math/remquof.exe",
    "math -> remquol": "/src/math/remquol.exe",
    "math -> rint": "/src/math/rint.exe",
    "math -> rintf": "/src/math/rintf.exe",
    "math -> rintl": "/src/math/rintl.exe",
    "math -> round": "/src/math/round.exe",
    "math -> roundf": "/src/math/roundf.exe",
    "math -> roundl": "/src/math/roundl.exe",
    "math -> scalb": "/src/math/scalb.exe",
    "math -> scalbf": "/src/math/scalbf.exe",
    "math -> scalbln": "/src/math/scalbln.exe",
    "math -> scalblnf": "/src/math/scalblnf.exe",
    "math -> scalblnl": "/src/math/scalblnl.exe",
    "math -> scalbn": "/src/math/scalbn.exe",
    "math -> scalbnf": "/src/math/scalbnf.exe",
    "math -> scalbnl": "/src/math/scalbnl.exe",
    "math -> sin": "/src/math/sin.exe",
    "math -> sincos": "/src/math/sincos.exe",
    "math -> sincosf": "/src/math/sincosf.exe",
    "math -> sincosl": "/src/math/sincosl.exe",
    "math -> sinf": "/src/math/sinf.exe",
    "math -> sinh": "/src/math/sinh.exe",
    "math -> sinhf": "/src/math/sinhf.exe",
    "math -> sinhl": "/src/math/sinhl.exe",
    "math -> sinl": "/src/math/sinl.exe",
    "math -> sqrt": "/src/math/sqrt.exe",
    "math -> sqrtf": "/src/math/sqrtf.exe",
    "math -> sqrtl": "/src/math/sqrtl.exe",
    "math -> tan": "/src/math/tan.exe",
    "math -> tanf": "/src/math/tanf.exe",
    "math -> tanh": "/src/math/tanh.exe",
    "math -> tanhf": "/src/math/tanhf.exe",
    "math -> tanhl": "/src/math/tanhl.exe",
    "math -> tanl": "/src/math/tanl.exe",
    "math -> tgamma": "/src/math/tgamma.exe",
    "math -> tgammaf": "/src/math/tgammaf.exe",
    "math -> tgammal": "/src/math/tgammal.exe",
    "math -> trunc": "/src/math/trunc.exe",
    "math -> truncf": "/src/math/truncf.exe",
    "math -> truncl": "/src/math/truncl.exe",
    "math -> y0": "/src/math/y0.exe",
    "math -> y0f": "/src/math/y0f.exe",
    "math -> y1": "/src/math/y1.exe",
    "math -> y1f": "/src/math/y1f.exe",
    "math -> yn": "/src/math/yn.exe",
    "math -> ynf": "/src/math/ynf.exe",
    "regression -> dn_expand-empty": "/src/regression/dn_expand-empty.exe",
    "regression -> dn_expand-ptr-0": "/src/regression/dn_expand-ptr-0.exe",
    "regression -> fgets-eof": "/src/regression/fgets-eof.exe",
    "regression -> fpclassify-invalid-ld80": "/src/regression/fpclassify-invalid-ld80.exe",
    "regression -> ftello-unflushed-append": "/src/regression/ftello-unflushed-append.exe",
    "regression -> getpwnam_r-crash": "/src/regression/getpwnam_r-crash.exe",
    "regression -> getpwnam_r-errno": "/src/regression/getpwnam_r-errno.exe",
    "regression -> iconv-roundtrips": "/src/regression/iconv-roundtrips.exe",
    "regression -> inet_ntop-v4mapped": "/src/regression/inet_ntop-v4mapped.exe",
    "regression -> inet_pton-empty-last-field": "/src/regression/inet_pton-empty-last-field.exe",
    "regression -> iswspace-null": "/src/regression/iswspace-null.exe",
    "regression -> lrand48-signextend": "/src/regression/lrand48-signextend.exe",
    "regression -> malloc-0": "/src/regression/malloc-0.exe",
    "regression -> mbsrtowcs-overflow": "/src/regression/mbsrtowcs-overflow.exe",
    "regression -> memmem-oob-read": "/src/regression/memmem-oob-read.exe",
    "regression -> memmem-oob": "/src/regression/memmem-oob.exe",
    "regression -> mkdtemp-failure": "/src/regression/mkdtemp-failure.exe",
    "regression -> mkstemp-failure": "/src/regression/mkstemp-failure.exe",
    "regression -> printf-1e9-oob": "/src/regression/printf-1e9-oob.exe",
    "regression -> printf-fmt-g-round": "/src/regression/printf-fmt-g-round.exe",
    "regression -> printf-fmt-g-zeros": "/src/regression/printf-fmt-g-zeros.exe",
    "regression -> printf-fmt-n": "/src/regression/printf-fmt-n.exe",
    "regression -> pthread_condattr_setclock": "/src/regression/pthread_condattr_setclock.exe",
    "regression -> putenv-doublefree": "/src/regression/putenv-doublefree.exe",
    "regression -> regex-backref-0": "/src/regression/regex-backref-0.exe",
    "regression -> regex-bracket-icase": "/src/regression/regex-bracket-icase.exe",
    "regression -> regex-ere-backref": "/src/regression/regex-ere-backref.exe",
    "regression -> regex-escaped-high-byte": "/src/regression/regex-escaped-high-byte.exe",
    "regression -> regex-negated-range": "/src/regression/regex-negated-range.exe",
    "regression -> regexec-nosub": "/src/regression/regexec-nosub.exe",
    "regression -> scanf-bytes-consumed": "/src/regression/scanf-bytes-consumed.exe",
    "regression -> scanf-match-literal-eof": "/src/regression/scanf-match-literal-eof.exe",
    "regression -> scanf-nullbyte-char": "/src/regression/scanf-nullbyte-char.exe",
    "regression -> setvbuf-unget": "/src/regression/setvbuf-unget.exe",
    "regression -> sigprocmask-internal": "/src/regression/sigprocmask-internal.exe",
    "regression -> sscanf-eof": "/src/regression/sscanf-eof.exe",
    "regression -> strverscmp": "/src/regression/strverscmp.exe",
    "regression -> uselocale-0": "/src/regression/uselocale-0.exe",
    "regression -> wcsncpy-read-overflow": "/src/regression/wcsncpy-read-overflow.exe",
    "regression -> wcsstr-false-negative": "/src/regression/wcsstr-false-negative.exe",
}


LIBC_TEST_EXCLUDE: dict = {
    "common -> runtest": "/src/common/runtest.exe",
    "functional -> env": "/src/functional/env.exe",
    "functional -> fcntl": "/src/functional/fcntl.exe",
    "functional -> fscanf": "/src/functional/fscanf.exe",
    "functional -> fwscanf": "/src/functional/fwscanf.exe",
    "functional -> ipc_msg": "/src/functional/ipc_msg.exe",
    "functional -> ipc_sem": "/src/functional/ipc_sem.exe",
    "functional -> ipc_shm": "/src/functional/ipc_shm.exe",
    "functional -> popen": "/src/functional/popen.exe",
    "functional -> pthread_cancel-points": "/src/functional/pthread_cancel-points.exe",
    "functional -> pthread_cancel": "/src/functional/pthread_cancel.exe",
    "functional -> pthread_cond": "/src/functional/pthread_cond.exe",
    "functional -> pthread_mutex": "/src/functional/pthread_mutex.exe",
    "functional -> pthread_mutex_pi": "/src/functional/pthread_mutex_pi.exe",
    "functional -> pthread_robust": "/src/functional/pthread_robust.exe",
    "functional -> pthread_tsd": "/src/functional/pthread_tsd.exe",
    "functional -> sem_init": "/src/functional/sem_init.exe",
    "functional -> sem_open": "/src/functional/sem_open.exe",
    "functional -> setjmp": "/src/functional/setjmp.exe",
    "functional -> spawn": "/src/functional/spawn.exe",
    "functional -> sscanf_long": "/src/functional/sscanf_long.exe",
    "functional -> stat": "/src/functional/stat.exe",
    "functional -> strptime": "/src/functional/strptime.exe",
    "functional -> tls_init": "/src/functional/tls_init.exe",
    "functional -> tls_local_exec": "/src/functional/tls_local_exec.exe",
    "functional -> ungetc": "/src/functional/ungetc.exe",
    "functional -> utime": "/src/functional/utime.exe",
    "functional -> vfork": "/src/functional/vfork.exe",
    "math -> fmal": "/src/math/fmal.exe",
    "math -> lgamma": "/src/math/lgamma.exe",
    "math -> lgammaf": "/src/math/lgammaf.exe",
    "math -> lgammal": "/src/math/lgammal.exe",
    "math/lgammal.exe/src/math -> log2f": "/src/math/lgammal.exe/src/math/log2f.exe",
    "math -> powf": "/src/math/powf.exe",
    "regression -> daemon-failure": "/src/regression/daemon-failure.exe",
    "regression -> execle-env": "/src/regression/execle-env.exe",
    "regression -> fflush-exit": "/src/regression/fflush-exit.exe",
    "regression -> fgetwc-buffering": "/src/regression/fgetwc-buffering.exe",
    "regression -> flockfile-list": "/src/regression/flockfile-list.exe",
    "regression -> lseek-large": "/src/regression/lseek-large.exe",
    "regression -> malloc-brk-fail": "/src/regression/malloc-brk-fail.exe",
    "regression -> malloc-oom": "/src/regression/malloc-oom.exe",
    "regression -> pthread-robust-detach": "/src/regression/pthread-robust-detach.exe",
    "regression -> pthread_atfork-errno-clobber": "/src/regression/pthread_atfork-errno-clobber.exe",
    "regression -> pthread_cancel-sem_wait": "/src/regression/pthread_cancel-sem_wait.exe",
    "regression -> pthread_cond-smasher": "/src/regression/pthread_cond-smasher.exe",
    "regression -> pthread_cond_wait-cancel_ignored": "/src/regression/pthread_cond_wait-cancel_ignored.exe",
    "regression -> pthread_create-oom": "/src/regression/pthread_create-oom.exe",
    "regression -> pthread_exit-cancel": "/src/regression/pthread_exit-cancel.exe",
    "regression -> pthread_exit-dtor": "/src/regression/pthread_exit-dtor.exe",
    "regression -> pthread_once-deadlock": "/src/regression/pthread_once-deadlock.exe",
    "regression -> pthread_rwlock-ebusy": "/src/regression/pthread_rwlock-ebusy.exe",
    "regression -> raise-race": "/src/regression/raise-race.exe",
    "regression -> rewind-clear-error": "/src/regression/rewind-clear-error.exe",
    "regression -> rlimit-open-files": "/src/regression/rlimit-open-files.exe",
    "regression -> setenv-oom": "/src/regression/setenv-oom.exe",
    "regression -> sigaltstack": "/src/regression/sigaltstack.exe",
    "regression -> sigreturn": "/src/regression/sigreturn.exe",
    "regression -> statvfs": "/src/regression/statvfs.exe",
    "regression -> syscall-sign-extend": "/src/regression/syscall-sign-extend.exe",
    "regression -> tls_get_new-dtv": "/src/regression/tls_get_new-dtv.exe",
}
