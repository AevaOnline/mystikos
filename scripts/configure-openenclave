#!/bin/bash

if [ "${OE_ROOT}" == "" ]; then
    echo "$0: Please define OE_ROOT"
    exit 1
fi

configure_repositories()
{
    echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/intel-sgx.list
    wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo apt-key add -

    echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-7 main" | sudo tee /etc/apt/sources.list.d/llvm-toolchain-bionic-7.list
    wget -qO - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -

    echo "deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main" | sudo tee /etc/apt/sources.list.d/msprod.list
wget -qO - https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
}

install_dcap_driver()
{
    sudo apt update
    sudo apt -y install dkms
    wget https://download.01.org/intel-sgx/sgx-dcap/1.4/linux/distro/ubuntuServer18.04/sgx_linux_x64_driver_1.21.bin -O sgx_linux_x64_driver.bin
    chmod +x sgx_linux_x64_driver.bin
    sudo ./sgx_linux_x64_driver.bin
}

install_dependencies()
{
    sudo apt -y install clang-7 libssl-dev gdb libsgx-enclave-common libsgx-enclave-common-dev libprotobuf10 libsgx-dcap-ql libsgx-dcap-ql-dev az-dcap-client open-enclave
}

install_ansible()
{
    sudo ${OE_ROOT}/scripts/ansible/install-ansible.sh
}

setup_contributors_acc()
{
    ansible-playbook ${OE_ROOT}/scripts/ansible/oe-contributors-acc-setup.yml

}

setup_contributors()
{
    ansible-playbook ${OE_ROOT}/scripts/ansible/oe-contributors-setup.yml
}

configure_repositories
install_dcap_driver
install_dependencies
install_ansible
setup_contributors
