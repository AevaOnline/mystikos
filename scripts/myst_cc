#!/bin/bash

# This script generates the code coverage data for myst project. 
# You must run unit tests, libc tests, and samples with MYST_ENABLE_GCOV=1 first
# This script does these steps:
# 1. Creates gcov_pot folder under project root folder
# 2. Copies crt, utils, host, kernel and libc (third_party/enclave-musl/musl) *.gcno files
# 3. Copies *.c and *.h source files
# 4. Finds all generated ramfs/ folders under unit tests, libc tests and solutions
# 5. For each ramfs/ folder it copies *.gcda files into gcov_pot and generates info files 1.info, 2.info, ...
# 6. Generates consolidated total_cov.info from individual info files
# 7. From info files it generates html code coverage report into gcov_pot/myst_cc/
# 8. Generates myst_cc.zip file from gcov_pot/myst_cc/
#
# This script eventualy generates myst_cc.zip which has zipped HTML code coverage report and total_cov.info

MYST_ROOT="$(realpath "$(dirname "$0")/..")"

CC_DIR="${MYST_ROOT}"/gcov_pot

# Create clean folders for code coverage data
echo "Removing old data if exists ..."
rm -fr $CC_DIR
mkdir -p $CC_DIR/info
echo "Created $CC_DIR $CC_DIR/info folders"

# To be able to generate code coverage data, gcno, gcda and source files must be copied into same location
# Create source tree for kernel, shared, crt, ... Copy  *.gcno files
cp -R $MYST_ROOT/build/obj/* $CC_DIR
echo "Copied crt,host,kernel,target,tools,utils, gcno files"

# Copy kernel, crt, utils, host *.c and *.h source files
cp -R $MYST_ROOT/kernel/* $CC_DIR/kernel
cp -R $MYST_ROOT/crt/* $CC_DIR/crt
cp -R $MYST_ROOT/utils/* $CC_DIR/utils
cp -R $MYST_ROOT/host/* $CC_DIR/host
cp -R $MYST_ROOT/target/* $CC_DIR/target
cp -R $MYST_ROOT/tools/* $CC_DIR/tools
cp -R $MYST_ROOT/utils/* $CC_DIR/utils
echo "Copied kernel, crt, utils, host, target, tools source files"

# Create source tree for libc and copy *.gcno, *.c and *.h source files
# We also need to copy gco, gcda and source files into same location for enclave-musl as well
mkdir -p $CC_DIR/third_party/enclave-musl/musl
cp -R $MYST_ROOT/third_party/enclave-musl/musl/* $CC_DIR/third_party/enclave-musl/musl
rm -fr $CC_DIR/third_party/enclave-musl/musl/obj
echo "Copied libc source files"
cp -R $MYST_ROOT/third_party/enclave-musl/musl/obj/* $CC_DIR/third_party/enclave-musl/musl
echo "Copied libc gcno files"

# Clean up unneded files from code coverage gcov_pot/ 
find $CC_DIR -name *.o  -exec rm {} \;
find $CC_DIR -name *.lo  -exec rm {} \;
find $CC_DIR -name Makefile  -exec rm {} \;

tests_ramfs_list="${CC_DIR}"/tests_ramfs_list.txt
solutions_ramfs_list="${CC_DIR}"/solutions_ramfs_list.txt
libc_ramfs_list="${CC_DIR}"/libc_ramfs_list.txt
all_ramfs_list="${CC_DIR}"/all_ramfs_list.txt

# Find LibC test ramfs/ folders
find $MYST_ROOT/tests/libc/gcov/ -type d -name ramfs | grep -v linux > $libc_ramfs_list
ramfs_cnt=$(grep -c ramfs $libc_ramfs_list)
echo "Found $ramfs_cnt libc ramfs folders"
if [[ $ramfs_cnt -lt 1 ]]; then
    echo "You must run libc tests first to generate ramfs code coverage data"
    exit 1
fi

# Find ramfs/ folders under solutions/
find $MYST_ROOT/solutions/ -type d -name ramfs > $solutions_ramfs_list
ramfs_cnt=$(grep -c ramfs $solutions_ramfs_list)
echo "Found $ramfs_cnt solutions ramfs folders"
if [[ $ramfs_cnt -lt 1 ]]; then
    echo "You must run solutions tests first to generate ramfs code coverage data"
    exit 1
fi

# Create ramfs for mman kernel coverage
mkdir -p $MYST_ROOT/tests/mman/ramfs$MYST_ROOT/build/obj
cp -R $MYST_ROOT/build/obj/tests/mman$MYST_ROOT/* $MYST_ROOT/tests/mman/ramfs$MYST_ROOT/build/obj
find $MYST_ROOT/tests/mman/ramfs$MYST_ROOT/build/obj -name *.o  -exec rm {} \;
echo "Created tests/mman/ramfs from $MYST_ROOT/build/obj/tests/mman$MYST_ROOT/"

# Find unit tests ramfs/ folders
# mman changes some gcno files. So it must be the last otherwise causes mismatch errors
# we are ignoring mman/ramfs here but adding later to the end of all_ramfs_list.txt
find $MYST_ROOT/tests -type d -name ramfs | grep -v 'libc\|mman\|linux'  > $tests_ramfs_list 
ramfs_cnt=$(grep -c ramfs $tests_ramfs_list)
ramfs_cnt=$(($ramfs_cnt+1))
echo "Found $ramfs_cnt unit test ramfs folders"
if [[ $ramfs_cnt -lt 1 ]]; then
    echo "You must run unit tests first to generate ramfs code coverage data"
    exit 1
fi

# Combine all ramfs folder locations to all_ramfs_list.txt
cp $libc_ramfs_list $all_ramfs_list
cat $solutions_ramfs_list >> $all_ramfs_list
cat $tests_ramfs_list >> $all_ramfs_list
# mman changes some gcno files. So it must be the last otherwise causes mismatch errors
echo "$MYST_ROOT/tests/mman/ramfs" >> $all_ramfs_list

ramfs_cnt=$(grep -c ramfs $all_ramfs_list)
echo "Found total $ramfs_cnt ramfs folders to be used to generate code coverage data"

# Generate cc info file for each ramfs/ folder under gcov_pot/info/
ii=1
echo "Generating cc info files ..."
while IFS="" read -r line || [ -n "$line" ]
do
    # Delete existing *.gcda files
    find $CC_DIR -name *.gcda -exec rm {} \;
    
    # Copy *.gcda files from ramfs/
    obj_folder=$line$MYST_ROOT/build/obj
    tp_folder=$line$MYST_ROOT/third_party/enclave-musl/musl/obj

    [ -d $obj_folder ] && cp -R $obj_folder/* $CC_DIR && rm -fr $CC_DIR/tests
    [ -d $tp_folder ] && cp -R $tp_folder/* $CC_DIR/third_party/enclave-musl/musl
    
    # Generate cc info file
    lcov -d $CC_DIR -o $CC_DIR/info/$ii.info -c -q
    ii=$(($ii+1))
done < $all_ramfs_list

ramfs_cnt=$(($ii-1))
echo "Generated total $ramfs_cnt info files under gcov_pot/info from ramfs folders"

# Generate consolidated cc info file from individual info files
ii=2
cd $CC_DIR/info
echo "Creating total_cov.info file ..."
cp 1.info total_cov.info

while  [[ $ii -le $ramfs_cnt ]]
do
    lcov -a total_cov.info -a $ii.info -o total_cov.info
    ii=$(($ii+1))
done
cp total_cov.info $MYST_ROOT/total_cov.info
echo "Created total_cov.info from $ramfs_cnt info files and copied to $MYST_ROOT/total_cov.info"

# Generate HTML code coverage report
genhtml -o myst_cc -p $CC_DIR/third_party/enclave-musl -p $CC_DIR -p $MYST_ROOT total_cov.info
echo "Generated HTML code coverage report under gcov_pot/info/myst_cc/"

# Create zip file from myst_cc/ folder
zip -r $MYST_ROOT/myst_cc.zip myst_cc/
echo "Created $MYST_ROOT/myst_cc.zip from gcov_pot/info/myst_cc/"

# Clean up
cd $MYST_ROOT
rm -fr $CC_DIR
echo "Removed $CC_DIR"
echo "Done"

